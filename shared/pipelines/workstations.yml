#@ load("@ytt:data", "data")

---
groups:
- name: all
  jobs:
  - build-image
#@ for workstation in data.values.workstations:
  - #@ workstation["name"]
#@ end

- name: build-canary
  jobs:
  - build-image

- name: runtime
  jobs:
#@ for workstation in data.values.workstations:
#@   if workstation["team"] == 'runtime':
  - #@ workstation["name"]
#@   end
#@ end

- name: observability
  jobs:
#@ for workstation in data.values.workstations:
#@   if workstation["team"] == 'observability':
  - #@ workstation["name"]
#@   end
#@ end

resource_types:
  - name: gcs-resource
    type: docker-image
    source:
      repository: frodenas/gcs-resource

resources:
- name: weekly-repave
  type: time
  icon: clock
  source:
    location: America/Los_Angeles
    start: 5:00 PM
    stop: 5:10 PM
    days: [Saturday]

- name: saturday-night-fever
  type: time
  icon: clock
  source:
    location: America/Los_Angeles
    start: 6:00 PM
    stop: 6:10 PM
    days: [Saturday]

- name: devenv
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal/tas-runtime-devenv
    private_key: ((github-tas-runtime-bot/private-key))
    branch: main

- name: ci
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/wg-app-platform-runtime-ci
    private_key: ((github-tas-runtime-bot/private-key))
    branch: main

- name: globalprotect-deb
  type: gcs-resource
  source:
    bucket: tas-journey-runtime-ecosystem
    json_key: ((gcp-tas-runtime-service-account/config-json))
    regexp: ci/assets/globalprotect/GlobalProtect_deb-(.*).deb

- name: shepherd
  type: gcs-resource
  source:
    bucket: tas-journey-runtime-ecosystem
    json_key: ((gcp-tas-runtime-service-account/config-json))
    regexp: ci/assets/shepherd/shepherd-(.*)-linux-amd64

jobs:
- name: build-image
  max_in_flight: 1
  plan:
    - in_parallel:
      - get: devenv
        trigger: true
      - get: globalprotect-deb
        trigger: true
      - get: shepherd
        trigger: true
      - get: ci
        trigger: true
      - get: weekly-repave
        trigger: true
    - task: build-vm
      file: ci/ci/workstations/tasks/build_image_vm.yml
      params:
        GCP_SERVICE_ACCOUNT_KEY: ((gcp-tas-runtime-service-account/config-json))
        GCP_PROJECT: #@ data.values.gcp_project
        MACHINE_NAME: #@ data.values.canary_name
    - task: install-devenv
      file: ci/ci/workstations/tasks/install_devenv.yml
      params:
        GCP_PROJECT: #@ data.values.gcp_project
        GCP_SERVICE_ACCOUNT_KEY: ((gcp-tas-runtime-service-account/config-json))
        GIT_SSH_PRIVATE_KEY: ((github-tas-runtime-bot/private-key))
        MACHINE_NAME: #@ data.values.canary_name
    - task: capture-image
      file: ci/ci/workstations/tasks/capture_image.yml
      params:
        GCP_SERVICE_ACCOUNT_KEY: ((gcp-tas-runtime-service-account/config-json))
        GCP_PROJECT: #@ data.values.gcp_project
        MACHINE_NAME: #@ data.values.canary_name

#@ for workstation in data.values.workstations:
- name: #@ workstation["name"]
  plan:
    - in_parallel:
      - get: saturday-night-fever
        trigger: true
      - get: ci
    - task: build-workstation
      file: ci/ci/workstations/tasks/build_workstation.yml
      params:
        GCP_SERVICE_ACCOUNT_KEY: ((gcp-tas-runtime-service-account/config-json))
        GCP_PROJECT: #@ data.values.gcp_project
        WORKSTATION_NAME: #@ workstation["name"]
        WORKSTATION_TEAM: #@ workstation["team"]
#@ end
