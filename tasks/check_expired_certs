#!/usr/bin/env bash

set -ex
set -o pipefail

export GOPATH=${PWD}/diego-release
export PATH=${PATH}:${GOPATH}/bin

pushd deployments-diego
find . -name "*vars-store.yml" | xargs -I{} -n 1 ./scripts/find-expired-certs-from-yaml.rb {} 60

envs=(warp-drive electron-cannon time-rotor-gcp)

echo '
********HOW TO GET THIS JOB GREEN*************
This job goes red when one of the diego environments has certs that need to be rotated.
In the output...
1. See the location of the file that has a variable that needs to be rotated (ie: ./envs/ENVIRONMENT-NAME/deployments/bbl/vars/director-vars-store.yml)
2. See the name of the variable printed (if any).
3. Go to the file.
4. Delete the variable (key and value).
5. Commit your changes.
6. Bbl up the environment again. There is a concourse job for this named bbl-up-ENVIRONMENT-NAME.
***********************************************
'

for env in ${envs[@]}; do
  pushd envs/$env
    echo "Checking certificates for ${env}"
    source .envrc

    today=$(date -u +%s)

    # expiration day + 30 days
    expire_day=$(echo "$today + 30 * 24 * 60 * 60" | bc)

    credhub export -f creds.yml

    yq '.credentials[] | select(.type == "certificate")' creds.yml | jq '[.name,.value.certificate] | @sh' | tr -d '"' | tr -d "'" |
      while IFS=" " read -r name certificate; do
        cert_expire_day=$(openssl x509 -noout -dates -in <(echo -e "$certificate") | grep notAfter | cut -d"=" -f2 | xargs -I {} -n 1 date -d {} +%s)
        if (( $cert_expire_day < $expire_day )); then
          echo "$name certificate has/will expire in the next 30 days, in credhub"
          credhub regenerate -n $name
          credhub bulk-regenerate --signed-by $name
        fi
      done

  popd
done
